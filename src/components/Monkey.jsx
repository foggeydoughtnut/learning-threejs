/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

const Monkey = (props) => {
  const ref = useRef(null);

  const { nodes, materials } = useGLTF("/monkey.gltf");

  useFrame((state, delta) => (ref.current.rotation.y += 0.01));


  const hoveredColor = {
    r: 1,
    g: 0,
    b: 0,
    isColor: true,
  };

  const baseColor = {
    r: 0,
    g: 1,
    b: 0,
    isColor: true,
  };

  nodes.Suzanne.material.color = baseColor;

  return (

    <group {...props} dispose={null}>
      <mesh
        ref={ref}
        castShadow
        receiveShadow
        geometry={nodes.Suzanne.geometry}
        material={nodes.Suzanne.material}
        onPointerOver={(e) => (ref.current.material.color = hoveredColor)}
        onPointerOut={(e) => (ref.current.material.color = baseColor)}
      />
    </group>
  );
}

useGLTF.preload("/monkey.gltf");

export default Monkey;